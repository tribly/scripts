#!/bin/bash
FROM="$1"
SUBJECT="$2"
MAILTO="$3"
BODY="$4"
ATTACHMENT="$5"
BOUNDARY="kjsahj4h2kahskahj2.3kahfah"
# we need two different boundaries: one for an encrypted mail, one for the original
ENCBOUNDARY="hfgkhg3k4hyj4hjk2h2kj2"
# GPG key to use
KEY="0xA03A50C0C71BE6BE"

generate_plain_headers() {
printf '%s\n' "FROM: $FROM
TO: $MAILTO
SUBJECT: $SUBJECT
Mime-Version: 1.0
Content-Type: multipart/encrypted; boundary=\"$ENCBOUNDARY\"; protocol="application/pgp-encrypted";
Content-Transfer-Encoding: 7bit
Content-Description: OpenPGP encrypted message

This is an OpenPGP/MIME encrypted message (RFC 2440 and 3156)
--${ENCBOUNDARY}
Content-Transfer-Encoding: 7bit
Content-Type: application/pgp-encrypted
Content-Description: PGP/MIME Versions Identification

Version: 1

--${ENCBOUNDARY}
Content-Transfer-Encoding: 7bit
Content-Disposition: inline; filename=encrypted.asc
Content-Type: application/octet-stream; name=encrypted.asc
Content-Description: OpenPGP encrypted message

"
}

generate_encrypted_headers() {
printf '%s\n' "Content-Type: multipart/mixed; boundary=\"$BOUNDARY\"

--${BOUNDARY}
Content-Type: text/plain; charset=\"US-ASCII\"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

$BODY
"

# Find out mime type of our file
if [[ ! -z "$ATTACHMENT" ]]; then
MIMETYPE=$(file --mime-type "$ATTACHMENT" | cut -d ' ' -f2)
printf '%s\n' "--${BOUNDARY}
Content-Type: $MIMETYPE
Content-Transfer-Encoding: base64
Content-Disposition: attachment; filename=\"${ATTACHMENT##*/}\"
"
        base64 "$ATTACHMENT"
fi

printf '%s\n' "--${BOUNDARY}--"
}

{
     # First plaintext headers are generated
     generate_plain_headers
     # Now we create the content which will be encrypted
     generate_encrypted_headers | gpg -e -a -r $KEY
     # Boundary to specify that we reached the end of encrypted text
     printf '%s\n' "--${ENCBOUNDARY}--"
} | sendmail -t -oi
